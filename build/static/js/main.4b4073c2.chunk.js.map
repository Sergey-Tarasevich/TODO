{"version":3,"sources":["Redux/Actions/actionsTypes.js","Redux/states.js","Redux/Reducers/TodoReducer.js","Redux/store.js","Components/Header/Clock.jsx","Components/Header/logo.svg","Components/Header/epam-logo.svg","Components/Header/Header.jsx","Redux/Actions/actionCreator.js","Components/Main/TodoInput.jsx","Components/Main/TodoItem.jsx","Components/Main/TodoList.jsx","Components/Main/Columns.jsx","Components/Footer/Footer.js","Components/ScrollToTopButton/ScrollToTopButton.jsx","App.js","index.js"],"names":["ADD_TODO","CLEAR_ALL_TODOS","DELETE_TODO","UPDATE_TODO","TOGGLE_TODO","todos","id","uuid","name","priority","completed","items","reducer","todoTask","state","action","type","push","payload","filter","todo","index","i","length","map","Number","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","devToolsExtension","f","store","createStore","applyMiddleware","thunk","Clock","props","date","Date","this","timerID","setInterval","tickTack","clearInterval","setState","toLocaleTimeString","React","Component","Header","className","src","logo","alt","epam","addTodo","TodoInput","useState","localStorage","getItem","value","setValue","setPriority","useSelector","dispatch","useDispatch","handleKeyDown","event","trimmedText","target","trim","alert","charCode","autoFocus","onChange","e","preventDefault","setItem","onKeyPress","placeholder","defaultValue","onClick","todoId","TodoItem","editable","setEditable","textColor","setTextColor","styleText","setStyleText","handleChangeTextStyle","style","color","textDecoration","updateTodo","TodoList","Columns","columnsFromBackend","columns","setColumns","display","justifyContent","height","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","removed","column","copiedItems","Object","entries","columnId","flexDirection","alignItems","margin","provided","snapshot","ref","innerRef","droppableProps","background","isDraggingOver","padding","width","minHeight","draggableId","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","Footer","href","rel","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","useEffect","addEventListener","scrollTo","top","behavior","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4b4073c2.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const CLEAR_ALL_TODOS = 'CLEAR_ALL_TODOS';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const UPDATE_TODO = 'UPDATE_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\n","import { v1 as uuid } from 'uuid';\nimport '../Components/Main/Styles.css';\nexport let todos = [\n  // { id: uuid(), name: 'value', priority: 1, completed: false },\n  {\n    id: uuid(),\n    name: 'Smile - your first Todo',\n    priority: '1',\n    completed: false,\n    items: [],\n  },\n];\n","/*eslint default-case: \"error\"*/\nimport {\n  ADD_TODO,\n  CLEAR_ALL_TODOS,\n  DELETE_TODO,\n  UPDATE_TODO,\n  TOGGLE_TODO,\n} from '../Actions/actionsTypes';\n\nimport { todos } from '../states';\n\nexport let reducer = (state = todos, action) => {\n  let todoTask;\n  switch (action.type) {\n    case ADD_TODO:\n      todoTask = [...state];\n      todoTask.push(action.payload);\n      return todoTask;\n\n    case CLEAR_ALL_TODOS:\n      todoTask = [...state];\n      todoTask = todoTask.filter((todo) => todo.id === action.payload);\n      return todoTask;\n\n    case DELETE_TODO:\n      todoTask = [...state];\n      todoTask = todoTask.filter((todo) => todo.id !== action.payload);\n      return todoTask;\n\n    case UPDATE_TODO:\n      todoTask = [...state];\n      let index = -1;\n      for (let i = 0; i < todoTask.length; i++) {\n        index++;\n        if (todoTask[i].id === action.payload.id) {\n        }\n      }\n      if (index !== -1) {\n        todoTask[index] = action.payload;\n        return todoTask;\n      }\n      break;\n    // we don't use toggleTodo in this project. left for an alternative option\n    case TOGGLE_TODO:\n      todoTask = [...state];\n      todoTask = todoTask.map((todo) => {\n        return todo.id === Number(action.payload.id)\n          ? { ...todo, completed: !todo.completed }\n          : { ...todo };\n      });\n      return todoTask;\n\n    // No Default\n  }\n  return state;\n};\n\nexport default reducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport { reducer } from './Reducers/TodoReducer';\nimport thunk from 'redux-thunk';\n\n// export let store = createStore(reducer);\n// export let store = compose(\n//   window.devToolsExtension ? window.devToolsExtension() : (f) => f\n// )(createStore)(reducer);\n\n// config redux\nconst composeEnhancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||\n  compose(window.devToolsExtension ? window.devToolsExtension() : (f) => f);\n\nexport let store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from 'react'\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tickTack(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tickTack() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n\n\nexport default Clock;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/epam-logo.fa2f8484.svg\";","import React from 'react';\nimport Clock from './Clock';\n\nimport './header.css';\n\nimport logo from './logo.svg';\nimport epam from './epam-logo.svg';\n\nconst Header = () => {\n  return (\n    <header className=\"Header\">\n      <div className=\"Logos\">\n        <img src={logo} className=\"React-logo\" alt=\"logoReact\" />\n        <div className=\"Text-header-logoReact\">\n          {' '}\n          TODO React\n          <Clock />\n        </div>\n        <img src={epam} className=\"Epam-logo\" alt=\"logoEpam\" />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import {\n  ADD_TODO,\n  CLEAR_ALL_TODOS,\n  DELETE_TODO,\n  UPDATE_TODO,\n  TOGGLE_TODO,\n} from './actionsTypes';\n\nexport function addTodo(todo) {\n  return {\n    type: ADD_TODO,\n    payload: todo,\n  };\n}\n\n// export function handleKeyDown(todo) {\n//   return {\n//     type: ADD_TODO,\n//     payload: todo,\n//   };\n// }\n\nexport function clearAllTask(todoId) {\n  return {\n    type: CLEAR_ALL_TODOS,\n    payload: todoId,\n  };\n}\n\nexport function deleteTodo(todoId) {\n  return {\n    type: DELETE_TODO,\n    payload: todoId,\n  };\n}\n\nexport function updateTodo(todo) {\n  return {\n    type: UPDATE_TODO,\n    payload: todo,\n  };\n}\n\nexport function toggleTodo(todoId) {\n  return {\n    type: TOGGLE_TODO,\n    payload: todoId,\n  };\n}\n","import React, { useState } from 'react';\nimport {\n  addTodo,\n  clearAllTask,\n  // handleKeyDown,\n} from '../../Redux/Actions/actionCreator';\nimport { v1 as uuid } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './Styles.css';\n\nfunction TodoInput() {\n  let [value, setValue] = useState(localStorage.getItem('value') || '');\n  let [priority, setPriority] = useState(\n    localStorage.getItem('priority') || ''\n  );\n  let todos = useSelector((state) => state);\n  let dispatch = useDispatch();\n\n  const updateInput = (e) => {\n    e.preventDefault();\n\n    localStorage.setItem('value', e.target.value);\n    //update react state\n    setValue(e.target.value);\n  };\n\n  const updateInputPriority = (e) => {\n    const trimmedText = e.target.value.trim();\n    localStorage.setItem('priority', trimmedText);\n    //update react state\n    setPriority(trimmedText);\n  };\n\n  const handleKeyDown = (event) => {\n    const trimmedText = event.target.value.trim();\n    // if (value === '') return alert('Need enter TODO task');\n    if (priority < Number(0) || priority > Number(5))\n      return alert('Need enter Priority number 1 - 5');\n\n    // If the user pressed the Enter key:\n\n    if (event.charCode === 13 && trimmedText) {\n      // Dispatch the \"todo added\" action with this text\n      dispatch(\n        addTodo({\n          id: uuid(),\n          name: value,\n          priority: priority,\n          completed: false,\n        })\n      );\n      // And clear out the text input\n      setValue('');\n      setPriority('');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h3 className=\"row-name-todo col-12 offset-lg-3 col-lg-6 alert alert-info\">\n          TODO or NOT TODO that is the question\n        </h3>\n        <hr />\n\n        <div className=\"col-12 offset-lg-3 col-lg-6 form-horizontal\">\n          <div className=\"form-group\">\n            <label className=\"input-label alert alert-success\">\n              TODO's LIST\n            </label>\n\n            <div className=\"input-form form-group\">\n              <input\n                className=\"form-control\"\n                name=\"value\"\n                type=\"text\"\n                autoFocus={true}\n                value={value}\n                onChange={updateInput}\n                onKeyPress={handleKeyDown}\n                placeholder=\"Type your TODO here...\"\n              />\n\n              <input\n                className=\"form-control\"\n                name=\"priority\"\n                type=\"number\"\n                defaultValue=\"0\"\n                value={priority}\n                onKeyPress={handleKeyDown}\n                onChange={updateInputPriority}\n                placeholder=\"Type your PRIORITY...\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group-btn\">\n            <div className=\"group-btn\">\n              <button\n                className=\"btn-addTask btn btn-primary\"\n                type=\"submit\"\n                onClick={(e) => {\n                  dispatch(\n                    addTodo({\n                      id: uuid(),\n                      name: value,\n                      priority: priority,\n                      completed: false,\n                    })\n                  );\n                  if (value === '') return alert('Need enter TODO task');\n                  setValue('');\n\n                  setPriority('');\n                }}\n              >\n                Add TODO TASK\n              </button>\n\n              <button\n                className=\"btn-clearAllTask btn btn-danger\"\n                type=\"submit\"\n                onClick={() => dispatch(clearAllTask(todos.id))}\n              >\n                CLEAR ALL TASK's\n              </button>\n            </div>\n          </div>\n\n          <h4 className=\"badge col-12 offset-ld-3 col-lg-6 alert alert-warning\">\n            To Do Count: <span>{todos.length}</span>\n          </h4>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoInput;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteTodo,\n  updateTodo,\n  toggleTodo,\n} from '../../Redux/Actions/actionCreator';\nimport { useSelector } from 'react-redux';\nimport './Styles.css';\n\nfunction TodoItem({ todo }) {\n  // set hooks edit todo text in input\n  const [editable, setEditable] = useState(false);\n  const [value, setValue] = useState(todo);\n  //set hooks color text\n  const [textColor, setTextColor] = useState('red');\n  //set hooks style text\n  const [styleText, setStyleText] = useState('none');\n  // let todos = useSelector((state) => state);\n  let dispatch = useDispatch();\n\n  const handleChangeTextStyle = () => {\n    setTextColor(textColor === 'green' ? 'red' : 'green');\n    setStyleText(styleText === 'line-through' ? 'none' : 'line-through');\n  };\n\n  return (\n    <div>\n      <div className=\"row mx-2 align-items-center\">\n        {/* <div>#{todo.id.length > 1 ? todo.id[2] : todo.id}</div> */}\n        <div>\n          {editable ? (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={value}\n              onChange={(e) => {\n                setValue(e.target.value);\n              }}\n            />\n          ) : (\n            <h4 style={{ color: textColor, textDecoration: styleText }}>\n              <span className=\"form-text-priority-todo\">\n                Priority is: {todo.priority}\n              </span>{' '}\n              <br />\n              <span className=\"form-text-priority-todo\">\n                Todo is: {todo.name}\n              </span>\n            </h4>\n          )}\n\n          {/* edit's todo task button */}\n          <button\n            className=\"btn btn-primary m-2\"\n            onClick={() => {\n              dispatch(\n                updateTodo({\n                  ...todo,\n                  name: value,\n                })\n              );\n              if (editable) {\n                setValue(todo.value);\n              }\n              setEditable(!editable);\n            }}\n          >\n            {editable ? 'Update' : 'Edit'}\n          </button>\n          {/* delete todo task button */}\n          <button\n            className=\"btn btn-danger m-2\"\n            onClick={() => dispatch(deleteTodo(todo.id))}\n          >\n            Delete Task\n          </button>\n          {/* checkbox change color and text decoration (change css) */}\n          <input\n            type=\"checkbox\"\n            className=\"checkbox\"\n            onClick={() => dispatch(handleChangeTextStyle)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport { useSelector } from 'react-redux';\nimport './Styles.css';\n\nfunction TodoList() {\n  let todos = useSelector((state) => state);\n  // ul - className=\"col-12 offset-lg-3 col-lg-6 list-group\"\n  return (\n    <div className=\"tasks__list\">\n      <ul>\n        {todos.map((todo, priority) => (\n          <li className=\"list-group-item\">\n            <TodoItem key={todos.id} todo={todo} priority={priority} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\n\nimport TodoList from './TodoList';\nimport TodoItem from './TodoItem';\n\nimport { v1 as uuid } from 'uuid';\n\nfunction Columns({ todo, priority }) {\n  let todos = useSelector((state) => state);\n\n  // const itemsFromBackend = [\n  //   { id: uuid(), name: 'First task' },\n  //   { id: uuid(), name: \"Second task\" },\n  //   { id: uuid(), name: \"Third task\" },\n  //   { id: uuid(), name: \"Fourth task\" },\n  //   { id: uuid(), name: \"Fifth task\" }\n  // ];\n\n  const columnsFromBackend = {\n    [uuid()]: {\n      name: 'To do',\n      items: [...todos],\n    },\n    [uuid()]: {\n      name: 'In Progress',\n      items: [],\n    },\n    [uuid()]: {\n      name: 'Done',\n      items: [],\n    },\n  };\n\n  let [columns, setColumns] = useState(columnsFromBackend);\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems,\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems,\n        },\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems,\n        },\n      });\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', height: '100%' }}>\n      <DragDropContext\n        onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}\n              key={columnId}\n            >\n              <h2>{column.name}</h2>\n\n              <div style={{ margin: 8 }}>\n                {/* start create form columns */}\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                        style={{\n                          background: snapshot.isDraggingOver\n                            ? 'lightblue'\n                            : 'lightgrey',\n                          padding: 4,\n                          width: 350,\n                          minHeight: 200,\n                        }}\n                        // finish create form columns\n                      >\n                        {column.items.map((todo, index) => {\n                          return (\n                            <Draggable\n                              key={todo.id}\n                              draggableId={todo.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: 'none',\n                                      padding: 16,\n                                      margin: '0 0 8px 0',\n                                      minHeight: '50px',\n                                      backgroundColor: snapshot.isDragging\n                                        ? // first value - color when we drop task\n                                          '#263B4A'\n                                        : // second value - background block task color\n                                          '#456C86',\n                                      color: 'white',\n                                      ...provided.draggableProps.style,\n                                    }}\n                                  >\n                                    <TodoList todo={todo.name} />\n                                    <TodoItem todo={todo} />\n                                    {todos.name}\n                                    <br />\n                                    Priority is: {todo.priority}\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default Columns;\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div>Learn React and enjoy your new skills</div>\n\n      <div>\n        <a\n          className=\"link-footer\"\n          href=\"https://ru.reactjs.org/docs/getting-started.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport './Styles.css';\n\nexport default function ScrollToTop() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Show button when page is scorlled upto given distance\n  const toggleVisibility = () => {\n    if (window.pageYOffset > 200) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n\n  // Set the top cordinate to 0\n  // make scrolling smooth\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', toggleVisibility);\n  }, []);\n\n  return (\n    <div className=\"scroll-to-top\">\n      {isVisible && (\n        <div onClick={scrollToTop}>\n          <img\n            src=\"https://i.postimg.cc/44Ytsk8Z/top-arrow-emoj.png\"\n            alt=\"Scroll Button To Top\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Header from './Components/Header/Header';\nimport TodoInput from './Components/Main/TodoInput';\nimport TodoList from './Components/Main/TodoList';\nimport Columns from './Components/Main/Columns';\nimport Footer from './Components/Footer/Footer';\nimport ScrollToTopButton from './Components/ScrollToTopButton/ScrollToTopButton';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <article className=\"TodoList\">\n          <TodoInput />\n          <TodoList />\n          <Columns />\n        </article>\n        <ScrollToTopButton />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/store';\n\n// import MainReducer from './Redux/Reducers/MainReducer';\n\nimport App from './App';\n\n//To be able to use Redux DevTools Extension add window.devToolsExtension ? window.devToolsExtension() : (f) => f\n// const store = compose(\n//   window.devToolsExtension ? window.devToolsExtension() : (f) => f\n// )(createStore)(MainReducer);\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}