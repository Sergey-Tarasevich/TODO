{"ast":null,"code":"var _jsxFileName = \"/Users/siarhei/Documents/GitHub/react_study/src/Main/TodoList.jsx\";\nimport React, { useState } from 'react';\nimport TodoListCss from './TodoListCss.module.css'; // create new class component for TODO List\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props); // create state only in constructor\n\n    this.state = {\n      newItem: '',\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem(e) {\n    e.preventDefault(); //create item with unique id\n\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; // copy of current list of items\n\n    const list = [...this.state.list]; //add new item to list\n\n    list.push(newItem); // update state with new list and reset newItem input\n\n    this.setState({\n      list,\n      newItem: ''\n    });\n  }\n\n  deleteItem(id) {\n    //copy current list of items\n    const list = [...this.state.list]; //filter out item being deleted\n\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: TodoListCss.TodoList,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"TODO's LIST\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.addItem,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Type your TODO here...\",\n              value: this.state.newItem,\n              onChange: e => this.updateInput('newItem', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => this.addItem(e),\n              children: \"Add TODO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: this.state.list.map(item => {\n                  return (\n                    /*#__PURE__*/\n                    //add li with unique id\n                    _jsxDEV(\"li\", {\n                      children: [item.value, /*#__PURE__*/_jsxDEV(\"label\", {\n                        // onClick={handleChangeTextColor}\n                        // onChange={handleChangeStyleText}\n                        className: \"switch\",\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 82,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => this.deleteItem(item.id),\n                        children: \"X\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 25\n                      }, this)]\n                    }, item.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 23\n                    }, this)\n                  );\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/siarhei/Documents/GitHub/react_study/src/Main/TodoList.jsx"],"names":["React","useState","TodoListCss","TodoList","Component","constructor","props","state","newItem","list","updateInput","key","value","setState","addItem","e","preventDefault","id","Math","random","slice","push","deleteItem","updatedList","filter","item","render","target","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport TodoListCss from './TodoListCss.module.css';\n\n// create new class component for TODO List\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    // create state only in constructor\n    this.state = {\n      newItem: '',\n      list: [],\n    };\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice(),\n    };\n\n    // copy of current list of items\n    const list = [...this.state.list];\n\n    //add new item to list\n    list.push(newItem);\n\n    // update state with new list and reset newItem input\n    this.setState({\n      list,\n      newItem: '',\n    });\n  }\n\n  deleteItem(id) {\n    //copy current list of items\n    const list = [...this.state.list];\n\n    //filter out item being deleted\n    const updatedList = list.filter((item) => item.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n\n  render() {\n    return (\n      <div className={TodoListCss.TodoList}>\n        <section>\n          <div>\n            TODO's LIST\n            <br />\n            <form onSubmit={this.addItem}>\n              <input\n                type=\"text\"\n                placeholder=\"Type your TODO here...\"\n                value={this.state.newItem}\n                onChange={(e) => this.updateInput('newItem', e.target.value)}\n              />\n              <button onClick={(e) => this.addItem(e)}>Add TODO</button>\n              <span>\n                <ul>\n                  {this.state.list.map((item) => {\n                    return (\n                      //add li with unique id\n                      <li key={item.id}>\n                        {item.value}\n\n                        <label\n                          // onClick={handleChangeTextColor}\n                          // onChange={handleChangeStyleText}\n                          className=\"switch\"\n                        >\n                          <input type=\"checkbox\" />\n                        </label>\n\n                        <button onClick={() => this.deleteItem(item.id)}>\n                          X\n                        </button>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </span>\n            </form>\n            <br />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}