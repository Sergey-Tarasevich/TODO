{"ast":null,"code":"var _jsxFileName = \"/Users/siarhei/Documents/GitHub/react_study/src/Main/TodoListProduction.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { reactLocalStorage } from 'reactjs-localstorage'; // import TodoListCss from './TodoListCss.module.css';\n// import ReactDOM from 'react-dom';\n\nimport './Styles.css'; // import ChooseTaskPriority from \"./ChooseTaskPriority\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = prop => {\n  _s();\n\n  // initial hooks\n  const [value, setValue] = useState(localStorage.getItem('value') || '');\n  const [priority, setPriority] = useState(localStorage.getItem('priority') || '');\n  const [list, setList] = useState([]); //set hooks color text\n\n  const [textColor, setTextColor] = useState('red'); //set hooks style text\n\n  const [styleText, setStyleText] = useState('none');\n\n  const handleChangeTextStyle = () => {\n    setTextColor(textColor === 'green' ? 'red' : 'green');\n    setStyleText(styleText === 'line-through' ? 'none' : 'line-through');\n  };\n\n  const updateInput = e => {\n    localStorage.setItem('', e.target.value); //update react state\n\n    setValue(e.target.value);\n  };\n\n  const updateInputPriority = e => {\n    localStorage.setItem('', e.target.priority); //update react state\n\n    setPriority(e.target.value);\n  };\n\n  const addTask = e => {\n    e.preventDefault();\n    if (value === '') return alert('Need enter TODO task');\n    if (priority < 0 || priority > 5) return alert('Need enter Priority number 1 - 5'); // if (priority === \"\") return setPriority(\"1\");\n    //create item task with unique id\n\n    setList([...list, {\n      id: 1 + Math.random(),\n      value: value.slice(),\n      priority: priority,\n      completed: false,\n      sorted: false\n    }]); // return empty input\n\n    setValue('');\n    setPriority('');\n  };\n\n  const sortTask = e => {\n    e.preventDefault(); // const updatedListTodo = [...list].sort((a, b) => b.priority - a.priority);\n\n    const updatedListTodo = list.filter(value => value.priority === 2); // const updatedListTodo = list.map((value) => {\n    //   return value.priority === 2\n    //     ? { ...value, priority: value.priority }\n    //     : value;\n    // });\n\n    setList(updatedListTodo);\n  };\n\n  const handleSubmitCourse = e => {\n    e.preventDefault(); // if (value === \"\") return;\n    // setValue(\"\");\n  };\n\n  const deleteTask = id => {\n    //filter out task being deleted\n    const updatedListTodo = list.filter(item => item.id !== id);\n    setList(updatedListTodo);\n  };\n\n  const clearAllTask = e => {\n    e.preventDefault();\n    const updatedListTodo = list.filter(value => list.value === '');\n    setList(updatedListTodo);\n  };\n\n  const toggleTodo = id => {\n    const updatedListTodo = list.map(value => {\n      return value.id === id ? { ...value,\n        completed: !value.completed\n      } : value;\n    });\n    setList(updatedListTodo);\n  };\n\n  const priorities = [{\n    value: 'ONE',\n    label: '1'\n  }, {\n    value: 'TWO',\n    label: '2'\n  }, {\n    value: 'THREE',\n    label: '3'\n  }, {\n    value: 'FOUR',\n    label: '4'\n  }, {\n    value: 'FIVE',\n    label: '5'\n  }];\n\n  const Options = ({\n    options\n  }) => {\n    // add priority with input\n    // return list.map((value) => (\n    //   <option key={value.value} value={value.priority}>\n    //     {value.priority}\n    //   </option>\n    // ));\n    return options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.label,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this));\n  }; // const filterDrop = list.filter((task) => task.id === value)\n\n\n  const handleChangeCourse = e => {\n    setList({\n      list: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    onSubmit: handleSubmitCourse,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"TODO or NOT TODO that is the question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-horizontal\",\n      children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"TODO's LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"value\",\n            type: \"text\",\n            value: value,\n            onChange: updateInput,\n            placeholder: \"Type your TODO here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"priority\",\n            type: \"number\",\n            defaultValue: \"0\",\n            value: priority,\n            onChange: updateInputPriority,\n            placeholder: \"Type your PRIORITY...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-addTask\",\n            type: \"submit\",\n            onClick: addTask,\n            children: \"Add TODO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-clearAllTask\",\n            type: \"submit\",\n            onClick: clearAllTask,\n            children: \"CLEAR ALL TASK's\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              // value={value}\n              // onChange={handleChangeCourse}\n              type: \"text\",\n              className: \"form-control\",\n              children: /*#__PURE__*/_jsxDEV(Options, {\n                options: priorities // sort={(e) => sortTask}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"To Do Count: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge\",\n        children: list.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: list.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        style: {\n          color: textColor,\n          textDecoration: styleText\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: value.completed ? 'value-completed' : undefined,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-group-item-priority\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\" Priority \", value.priority, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), value.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"checkbox\",\n          onClick: () => toggleTodo(value.id) // onChange={handleChangeTextStyle}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-deleteTask\",\n          onClick: () => deleteTask(value.id),\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, value.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"wSW8lp99cLXfSWFhkN5IfRJrcnI=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/siarhei/Documents/GitHub/react_study/src/Main/TodoListProduction.jsx"],"names":["React","useState","reactLocalStorage","TodoList","prop","value","setValue","localStorage","getItem","priority","setPriority","list","setList","textColor","setTextColor","styleText","setStyleText","handleChangeTextStyle","updateInput","e","setItem","target","updateInputPriority","addTask","preventDefault","alert","id","Math","random","slice","completed","sorted","sortTask","updatedListTodo","filter","handleSubmitCourse","deleteTask","item","clearAllTask","toggleTodo","map","priorities","label","Options","options","option","handleChangeCourse","length","color","textDecoration","undefined"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { reactLocalStorage } from 'reactjs-localstorage';\n// import TodoListCss from './TodoListCss.module.css';\n// import ReactDOM from 'react-dom';\nimport './Styles.css';\n// import ChooseTaskPriority from \"./ChooseTaskPriority\";\n\nconst TodoList = (prop) => {\n  // initial hooks\n  const [value, setValue] = useState(localStorage.getItem('value') || '');\n  const [priority, setPriority] = useState(\n    localStorage.getItem('priority') || ''\n  );\n  const [list, setList] = useState([]);\n\n  //set hooks color text\n  const [textColor, setTextColor] = useState('red');\n  //set hooks style text\n  const [styleText, setStyleText] = useState('none');\n\n  const handleChangeTextStyle = () => {\n    setTextColor(textColor === 'green' ? 'red' : 'green');\n    setStyleText(styleText === 'line-through' ? 'none' : 'line-through');\n  };\n\n  const updateInput = (e) => {\n    localStorage.setItem('', e.target.value);\n    //update react state\n    setValue(e.target.value);\n  };\n  const updateInputPriority = (e) => {\n    localStorage.setItem('', e.target.priority);\n    //update react state\n    setPriority(e.target.value);\n  };\n\n  const addTask = (e) => {\n    e.preventDefault();\n    if (value === '') return alert('Need enter TODO task');\n\n    if (priority < 0 || priority > 5)\n      return alert('Need enter Priority number 1 - 5');\n    // if (priority === \"\") return setPriority(\"1\");\n\n    //create item task with unique id\n    setList([\n      ...list,\n      {\n        id: 1 + Math.random(),\n        value: value.slice(),\n        priority: priority,\n        completed: false,\n        sorted: false,\n      },\n    ]);\n\n    // return empty input\n    setValue('');\n    setPriority('');\n  };\n\n  const sortTask = (e) => {\n    e.preventDefault();\n    // const updatedListTodo = [...list].sort((a, b) => b.priority - a.priority);\n\n    const updatedListTodo = list.filter((value) => value.priority === 2);\n\n    // const updatedListTodo = list.map((value) => {\n    //   return value.priority === 2\n    //     ? { ...value, priority: value.priority }\n    //     : value;\n    // });\n\n    setList(updatedListTodo);\n  };\n\n  const handleSubmitCourse = (e) => {\n    e.preventDefault();\n    // if (value === \"\") return;\n\n    // setValue(\"\");\n  };\n\n  const deleteTask = (id) => {\n    //filter out task being deleted\n    const updatedListTodo = list.filter((item) => item.id !== id);\n    setList(updatedListTodo);\n  };\n\n  const clearAllTask = (e) => {\n    e.preventDefault();\n    const updatedListTodo = list.filter((value) => list.value === '');\n    setList(updatedListTodo);\n  };\n\n  const toggleTodo = (id) => {\n    const updatedListTodo = list.map((value) => {\n      return value.id === id\n        ? { ...value, completed: !value.completed }\n        : value;\n    });\n    setList(updatedListTodo);\n  };\n\n  const priorities = [\n    {\n      value: 'ONE',\n      label: '1',\n    },\n    {\n      value: 'TWO',\n      label: '2',\n    },\n    {\n      value: 'THREE',\n      label: '3',\n    },\n    {\n      value: 'FOUR',\n      label: '4',\n    },\n    {\n      value: 'FIVE',\n      label: '5',\n    },\n  ];\n\n  const Options = ({ options }) => {\n    // add priority with input\n    // return list.map((value) => (\n    //   <option key={value.value} value={value.priority}>\n    //     {value.priority}\n    //   </option>\n    // ));\n    return options.map((option) => (\n      <option key={option.value} value={option.label}>\n        {option.label}\n      </option>\n    ));\n  };\n\n  // const filterDrop = list.filter((task) => task.id === value)\n\n  const handleChangeCourse = (e) => {\n    setList({ list: e.target.value });\n  };\n\n  return (\n    <div className=\"container\" onSubmit={handleSubmitCourse}>\n      {/* {TodoListCss.TodoList} */}\n\n      <h3>TODO or NOT TODO that is the question</h3>\n      <hr />\n\n      <form className=\"form-horizontal\">\n        {' '}\n        {/* onSubmit={(e) => onSubmit(e)} */}\n        <div className=\"form-group\">\n          <label className=\"input-label\">TODO's LIST</label>\n          <div className=\"input-form\">\n            <input\n              name=\"value\"\n              type=\"text\"\n              value={value}\n              onChange={updateInput}\n              placeholder=\"Type your TODO here...\"\n            />\n            <input\n              name=\"priority\"\n              type=\"number\"\n              defaultValue=\"0\"\n              value={priority}\n              onChange={updateInputPriority}\n              placeholder=\"Type your PRIORITY...\"\n            />\n          </div>\n        </div>\n        <div className=\"form-group-btn\">\n          <div>\n            <button className=\"btn-addTask\" type=\"submit\" onClick={addTask}>\n              Add TODO\n            </button>\n\n            <button\n              className=\"btn-clearAllTask\"\n              type=\"submit\"\n              onClick={clearAllTask}\n            >\n              CLEAR ALL TASK's\n            </button>\n\n            <div>\n              <select\n                // value={value}\n                // onChange={handleChangeCourse}\n                type=\"text\"\n                className=\"form-control\"\n              >\n                <Options\n                  options={priorities}\n                  // sort={(e) => sortTask}\n                />\n                {/* {filterDrop.map(value => (\n                <option key={value.id} value={value.priority}>\n                  {value.priority}\n                </option>\n              ))} */}\n              </select>\n\n              {/* <button\n            type=\"submit\"\n            className=\"btn-sortTask\"\n            onChange={filterDrop}>\n                  SORT\n          </button> */}\n            </div>\n            {/* <ChooseTaskPriority  /> */}\n            {/* <button\n              type=\"submit\"\n              className=\"btn-sortTask\"\n              onClick={sortTask}>\n              SORT\n            </button> */}\n          </div>\n        </div>\n      </form>\n\n      <hr />\n\n      <h4>\n        To Do Count: <span className=\"badge\">{list.length}</span>\n      </h4>\n\n      <ul className=\"list-group\">\n        {list.map((value) => (\n          <li\n            className=\"list-group-item\"\n            key={value.id}\n            style={{ color: textColor, textDecoration: styleText }}\n          >\n            <span className={value.completed ? 'value-completed' : undefined}>\n              <div className=\"list-group-item-priority\">\n                <small> Priority {value.priority} </small>\n              </div>\n\n              {value.value}\n            </span>\n            <input\n              type=\"checkbox\"\n              className=\"checkbox\"\n              onClick={() => toggleTodo(value.id)}\n              // onChange={handleChangeTextStyle}\n            />\n            <button\n              className=\"btn-deleteTask\"\n              onClick={() => deleteTask(value.id)}\n            >\n              Delete Task\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}