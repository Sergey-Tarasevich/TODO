{"ast":null,"code":"var _jsxFileName = \"/Users/siarhei/Documents/GitHub/react_study/src/Main/todoList.jsx\";\nimport React from 'react';\nimport todoListCss from './todoList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: '',\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; // copy of current list of items\n\n    const list = [...this.state.list]; //add new item to list\n\n    list.push(newItem); // update state with new list and reset newItem input\n\n    this.setState({\n      list,\n      newItem: ''\n    });\n  }\n\n  deleteItem(id) {\n    //copy current list of items\n    const list = [...this.state.list]; //filter out item being deleted\n\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Add an Item...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type items here...\",\n          value: this.state.newItem,\n          onChange: e => this.updateInput('newItem', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.addItem(),\n          children: \"App TODO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.list.map(item => {\n            return (\n              /*#__PURE__*/\n              //add li with unique id\n              _jsxDEV(\"li\", {\n                children: [item.value, /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.deleteItem(item.id),\n                  children: \"X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/siarhei/Documents/GitHub/react_study/src/Main/todoList.jsx"],"names":["React","todoListCss","TodoList","Component","constructor","props","state","newItem","list","updateInput","key","value","setState","addItem","id","Math","random","slice","push","deleteItem","updatedList","filter","item","render","e","target","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAa;AACtB;AACA,SAAKC,QAAL,CAAc;AACZ,OAACF,GAAD,GAAOC;AADK,KAAd;AAGD;;AAEDE,EAAAA,OAAO,GAAG;AACR;AACA,UAAMN,OAAO,GAAG;AACdO,MAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADM;AAEdL,MAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBU,KAAnB;AAFO,KAAhB,CAFQ,CAOR;;AACA,UAAMT,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CARQ,CAUR;;AACAA,IAAAA,IAAI,CAACU,IAAL,CAAUX,OAAV,EAXQ,CAaR;;AACA,SAAKK,QAAL,CAAc;AACZJ,MAAAA,IADY;AAEZD,MAAAA,OAAO,EAAE;AAFG,KAAd;AAID;;AAEDY,EAAAA,UAAU,CAACL,EAAD,EAAK;AACb;AACA,UAAMN,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CAFa,CAIb;;AACA,UAAMY,WAAW,GAAGZ,IAAI,CAACa,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYA,EAAlC,CAApB;AAEA,SAAKF,QAAL,CAAc;AAAEJ,MAAAA,IAAI,EAAEY;AAAR,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAA,kDAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,oBAFd;AAGE,UAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,OAHpB;AAIE,UAAA,QAAQ,EAAGiB,CAAD,IAAO,KAAKf,WAAL,CAAiB,SAAjB,EAA4Be,CAAC,CAACC,MAAF,CAASd,KAArC;AAJnB;AAAA;AAAA;AAAA;AAAA,gBAHF,eASE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKE,OAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAA,oBACG,KAAKP,KAAL,CAAWE,IAAX,CAAgBkB,GAAhB,CAAqBJ,IAAD,IAAU;AAC7B;AAAA;AACE;AACA;AAAA,2BACGA,IAAI,CAACX,KADR,eAGE;AAAQ,kBAAA,OAAO,EAAE,MAAM,KAAKQ,UAAL,CAAgBG,IAAI,CAACR,EAArB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA,iBAASQ,IAAI,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA;AAFF;AAQD,WATA;AADH;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AA5EoC;;AA+EvC,eAAeZ,QAAf","sourcesContent":["import React from 'react';\n\nimport todoListCss from './todoList.module.css';\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newItem: '',\n      list: [],\n    };\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  addItem() {\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice(),\n    };\n\n    // copy of current list of items\n    const list = [...this.state.list];\n\n    //add new item to list\n    list.push(newItem);\n\n    // update state with new list and reset newItem input\n    this.setState({\n      list,\n      newItem: '',\n    });\n  }\n\n  deleteItem(id) {\n    //copy current list of items\n    const list = [...this.state.list];\n\n    //filter out item being deleted\n    const updatedList = list.filter((item) => item.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n\n  render() {\n    return (\n      <div className=\"TodoList\">\n        <div>\n          Add an Item...\n          <br />\n          <input\n            type=\"text\"\n            placeholder=\"Type items here...\"\n            value={this.state.newItem}\n            onChange={(e) => this.updateInput('newItem', e.target.value)}\n          />\n          <button onClick={() => this.addItem()}>App TODO</button>\n          <br />\n          <ul>\n            {this.state.list.map((item) => {\n              return (\n                //add li with unique id\n                <li key={item.id}>\n                  {item.value}\n\n                  <button onClick={() => this.deleteItem(item.id)}>X</button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}